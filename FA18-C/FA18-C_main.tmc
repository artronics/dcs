include "../bindings/usb.ttm"
include "../bindings/FA18-C_sim.ttm" 
include "../bindings/general.ttm" 
include "FA18-C_config.ttm" 
include "target.tmh"

int main() {
	Configure(&HCougar, MODE_EXCLUDED);
	Configure(&JoystickF18, MODE_EXCLUDED);
	Configure(&A320Pilot, MODE_EXCLUDED);
	Configure(&A320Copilot, MODE_EXCLUDED);
	Configure(&TCAQuadrant12, MODE_EXCLUDED);
	Configure(&TCAQuadrant34, MODE_EXCLUDED);
	Configure(&TCAYokeBoeing, MODE_EXCLUDED);
	Configure(&TCAQBoeing12, MODE_EXCLUDED);
	Configure(&TCAQBoeing34, MODE_EXCLUDED);
	Configure(&T16000, MODE_EXCLUDED);
	Configure(&T16000L, MODE_EXCLUDED);
	Configure(&LMFD, MODE_EXCLUDED);
	Configure(&RMFD, MODE_EXCLUDED);
	Configure(&TFRPRudder, MODE_EXCLUDED);
	Configure(&TWCSThrottle, MODE_EXCLUDED);
	Configure(&TFRPHARudder, MODE_EXCLUDED);
	if (Init(&EventHandle)) return 1;

	SetKBRate(32, 50);
	SetKBLayout(KB_ENG);

	SetShiftButton(&Throttle, CHF, &Throttle, 0, FLAPD, 0);

	map_axis();

	MapKeyIOUMD(&Joystick, S2, 0, 0, 0, PULSE + weapon_release, 0, 0);
	MapKeyIOUMD(&Joystick, TG2, 0, 0, 0, gun_trigger_2nd_detent, 0, 0);
	MapKeyIOUMD(&Joystick, H2U, 0, 0, PULSE + view_cockpit, PULSE + sensor_control_switch_fwd, 0, 0);
	MapKeyIOUMD(&Joystick, H2R, 0, 0, PULSE + view_map, PULSE + sensor_control_switch_right, 0, SEQ(PULSE + F9, PULSE + F9));
	MapKeyIOUMD(&Joystick, H2D, 0, 0, 0, PULSE + sensor_control_switch_aft, 0, 0);
	MapKeyIOUMD(&Joystick, H2L, 0, 0, PULSE + view_aircraft, PULSE + sensor_control_switch_left, 0, 0);
	MapKeyIOUMD(&Joystick, H3U, 0, 0, zoom_in, 0, 0, 0);
	MapKeyIOUMD(&Joystick, H3R, 0, 0, PULSE + view_centre, 0, 0, 0);
	MapKeyIOUMD(&Joystick, H3D, 0, 0, zoom_out, 0, 0, 0);
	MapKeyIOUMD(&Joystick, H3L, 0, 0, PULSE + trackir_centre, 0, 0, 0);
	MapKeyIOUMD(&Joystick, H4U, 0, 0, 0, PULSE + select_sparrow, 0, 0);
	MapKeyIOUMD(&Joystick, H4R, 0, 0, 0, PULSE + select_amraam, 0, 0);
	MapKeyIOUMD(&Joystick, H4D, 0, 0, 0, select_gun, 0, 0);
	MapKeyIOUMD(&Joystick, H4L, 0, 0, 0, PULSE + select_sidewinder, 0, 0);
	MapKeyIOUMD(&Joystick, H1U, 0, 0, view_slow_up, trim_up, 0, 0);
	MapKeyIOUMD(&Joystick, H1D, 0, 0, view_slow_down, trim_down, 0, 0);
	MapKeyIOUMD(&Joystick, H1L, 0, 0, view_slow_left, trim_left, 0, 0);
	MapKeyIOUMD(&Joystick, H1R, 0, 0, view_slow_right,trim_right, 0, 0);
}

int EventHandle(int type, alias o, int x) {
	DefaultMapping(&o, x);
}

int map_axis() {
	// Joystick
	MapAxis(&Joystick, JOYX, DX_X_AXIS, AXIS_NORMAL, MAP_ABSOLUTE);
	SetSCurve(&Joystick, JOYX, 0, 0, 0, 0, 0);
	MapAxis(&Joystick, JOYY, DX_Y_AXIS, AXIS_NORMAL, MAP_ABSOLUTE);
	SetSCurve(&Joystick, JOYY, 0, 0, 0, 0, 0);

	// Throttle
	map_throttle_slew();

	MapAxis(&Throttle, THR_RIGHT, DX_Z_AXIS, AXIS_NORMAL, MAP_ABSOLUTE);
	SetSCurve(&Throttle, THR_RIGHT, 0, 0, 0, 0, 0);
	MapAxis(&Throttle, THR_LEFT, DX_ZROT_AXIS, AXIS_NORMAL, MAP_ABSOLUTE);
	SetSCurve(&Throttle, THR_LEFT, 0, 0, 0, 0, 0);
	MapAxis(&Throttle, THR_FC, DX_SLIDER_AXIS, AXIS_NORMAL, MAP_ABSOLUTE);
	SetSCurve(&Throttle, THR_FC, 0, 0, 0, 0, 0);
}

int map_mouse() {
	KeyAxis(&Throttle, SCX, '', AXMAP1('','',''));
	KeyAxis(&Throttle, SCY, '', AXMAP1('','',''));

	MapAxis(&Throttle, SCX, MOUSE_X_AXIS, AXIS_NORMAL, MAP_RELATIVE);
	SetSCurve(&Throttle, SCX, 0, MOUSE_MID_DZ, 0, MOUSE_CURVE, MOUSE_SCALE);

	MapAxis(&Throttle, SCY, MOUSE_Y_AXIS, AXIS_NORMAL, MAP_RELATIVE);
	SetSCurve(&Throttle, SCY, 0, MOUSE_MID_DZ, 0, MOUSE_CURVE, MOUSE_SCALE);
}

int map_throttle_slew() {
	MapKeyIOUMD(&Throttle, SC, 0, 0, 0, PULSE + USB[40], 0, 0);

	MapAxis(&Throttle, SCX, DX_XROT_AXIS, AXIS_NORMAL, MAP_ABSOLUTE);
	SetSCurve(&Throttle, SCX, 0, THR_SLEW_MID_DZ, 0, THR_SLEW_CURVE, THR_SLEW_SCALE);

	MapAxis(&Throttle, SCY, DX_YROT_AXIS, AXIS_NORMAL, MAP_ABSOLUTE);
	SetSCurve(&Throttle, SCY, 0, THR_SLEW_MID_DZ, 0, THR_SLEW_CURVE, THR_SLEW_SCALE);

	KeyAxis(&Throttle, SCX, 'om', AXMAP2(LIST(0, 40, 60), USB[54], 0, USB[56]));
	KeyAxis(&Throttle, SCY, 'om', AXMAP2(LIST(0, 40, 60), USB[51], 0, USB[55]));
}